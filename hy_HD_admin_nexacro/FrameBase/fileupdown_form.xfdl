<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="fileupdown" width="840" height="530" titletext="New Form">
    <Layouts>
      <Layout height="530" mobileorientation="landscape" width="840">
        <Button id="btnAdd" taborder="0" text="추가" left="25" top="31" width="67" height="31" onclick="btnAdd_onclick"/>
        <Button id="btnDel" taborder="1" text="삭제" left="100" top="31" width="67" height="31" onclick="btnDel_onclick"/>
        <Grid id="Grid00" taborder="2" left="28" top="71" width="791" height="201" binddataset="dsUpload" ondrop="Grid00_ondrop" autofittype="col" nodatatext="파일을 드래그하여 첨부 할 수 있습니다." oncelldblclick="Grid00_oncelldblclick">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="25" band="left"/>
                <Column size="152"/>
                <Column size="320"/>
                <Column size="58"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell displaytype="checkboxcontrol" edittype="checkbox"/>
                <Cell col="1" text="FILE_NAME"/>
                <Cell col="2" text="FILE_URL"/>
                <Cell col="3" text="SIZE"/>
              </Band>
              <Band id="body">
                <Cell displaytype="checkboxcontrol" edittype="checkbox" text="bind:CHK"/>
                <Cell col="1" text="bind:FILE_NAME" displaytype="normal" edittype="none" treelevel="bind:DEPTH"/>
                <Cell col="2" text="bind:FILE_URL"/>
                <Cell col="3" treelevel="bind:DEPTH" text="bind:FiLE_SIZE"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btnSave" taborder="3" text="전송" left="173" top="31" width="67" height="31" onclick="btnSave_onclick"/>
        <Grid id="Grid01" taborder="4" left="28" top="325" width="791" height="201" binddataset="dsDownload" autofittype="col" oncelldblclick="Grid01_oncelldblclick" nodatatext="폴더를 지정하여 파일 리스트를 불러옵니다.">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="25" band="left"/>
                <Column size="152"/>
                <Column size="320"/>
                <Column size="58"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell displaytype="checkboxcontrol" edittype="checkbox"/>
                <Cell col="1" text="FILE_NAME"/>
                <Cell col="2" text="FILE_URL"/>
                <Cell col="3" text="SIZE"/>
              </Band>
              <Band id="body">
                <Cell displaytype="checkboxcontrol" edittype="checkbox" text="bind:CHK"/>
                <Cell col="1" text="bind:FILE_NAME" displaytype="normal" edittype="none" treelevel="bind:DEPTH"/>
                <Cell col="2" text="bind:FILE_URL"/>
                <Cell col="3" treelevel="bind:DEPTH" text="bind:FiLE_SIZE"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btnDonwload" taborder="5" text="전체 다운로드" left="719" top="287" width="100" height="31" onclick="btnDonwload_onclick"/>
        <Button id="btnSearch" taborder="6" text="리스트 불러오기" left="28" top="287" width="100" height="31" onclick="btnSearch_onclick"/>
        <ProgressBar id="ProgressBar00" taborder="7" max="100" min="0" left="619" top="31" width="200" height="31"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsUpload">
        <ColumnInfo>
          <Column id="CHK" type="STRING" size="256"/>
          <Column id="FILE_NAME" type="STRING" size="256"/>
          <Column id="FILE_URL" type="STRING" size="256"/>
          <Column id="FILE_ID" type="STRING" size="256"/>
          <Column id="DEPTH" type="STRING" size="256"/>
          <Column id="STATUS" type="STRING" size="256"/>
          <Column id="FiLE_SIZE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsDownload">
        <ColumnInfo>
          <Column id="CHK" type="STRING" size="256"/>
          <Column id="FILE_NAME" type="STRING" size="256"/>
          <Column id="FILE_URL" type="STRING" size="256"/>
          <Column id="DEPTH" type="STRING" size="256"/>
          <Column id="STATUS" type="STRING" size="256"/>
          <Column id="FiLE_SIZE" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <FileDownTransfer id="fileDownTrans" onsuccess="fileDownTrans_onsuccess" onerror="fileDownTrans_onerror"/>
      <FileUpTransfer id="fileUpTrans" onerror="fileUpTrans_onerror" onprogress="fileUpTrans_onprogress" onsuccess="fileUpTrans_onsuccess"/>
      <FileDialog id="fileDialog" onclose="fileDialog_onclose"/>
      <Dataset id="dsUpResult"/>
    </Objects>
    <Script type="xscript5.1"><![CDATA[/* service url : 사용경로 지정 */
this.saveUrl = "http://localhost:8080/hy_HD_admin_spring/service/";
this.folderName = "fileSample";	//file directory

this.fullFilesize = 0;
//추가
this.btnAdd_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//file dialog open
	this.fileDialog.open('nexacro17', FileDialog.MULTILOAD);
};

//삭제
this.btnDel_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//selected file delete
	var nRow = this.dsUpload.rowposition;
	var sFileid = this.dsUpload.getColumn(nRow,"FILE_ID");
	this.dsUpload.deleteRow(nRow);
	
	this.fileUpTrans.removeFile(sFileid);			//filelist remove
};

//저장
this.btnSave_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//file upload 실행
	this.uploadfile();
};

//리스트 불러오기
this.btnSearch_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//search attach file list
	this.transaction("list", this.saveUrl + "fileDownload_servlet_list_XML.jsp", "", "dsDownload=dsList", "filefolder="+this.folderName, "callback_transaction", "false", "0")
};

//전체 다운로드
this.btnDonwload_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.downloadfileAll();
};

//upload Grid oncelldbclick
this.Grid00_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	//단건 처리 필요 시 추가구현 : playnexacro 참조
};

//upload Grid ondrop
this.Grid00_ondrop = function(obj:nexacro.Grid,e:nexacro.GridDragEventInfo)
{
	if(e.datatype == "file")
	{
		this.addFileList(e.filelist);
	}
};

//download Grid oncelldbclick
this.Grid01_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{
	this.downloadfile(e.row);
};

this.callback_transaction = function(svcId, errCode, errMsg)
{
	if(svcId == "list")
	{
		this.dsDownload.set_enableevent(false);
		for(var i=0; i<this.dsDownload.getRowCount(); i++)
		{
			this.dsDownload.setColumn(i,"FiLE_SIZE",this.cutFileSize(this.dsDownload.getColumn(i,"FiLE_SIZE")));
		}
		this.dsDownload.set_enableevent(true);
	}
};

this.fileDialog_onclose = function(obj:nexacro.FileDialog,e:nexacro.FileDialogEventInfo)
{
	if(this.gfnIsNull(e.virtualfiles))
	{
		return;
	}
	
	this.addFileList(e.virtualfiles);
};

this.fileList_onsuccess = function(obj:nexacro.VirtualFile, e:nexacro.VirtualFileEventInfo)
{
	//getFileSize() call --> reason : 9
	if (e.reason == 9)
	{
		var nRowIdx = this.dsUpload.addRow();
		this.dsUpload.setColumn(nRowIdx, "FILE_NAME", obj.filename);
		this.dsUpload.setColumn(nRowIdx, "FiLE_SIZE", this.cutFileSize(e.filesize));
		this.dsUpload.setColumn(nRowIdx, "FILE_URL",  obj.fullpath);
		this.dsUpload.setColumn(nRowIdx, "FILE_ID",	  obj.name);
		
		//this.fullFilesize += e.filesize;
		
		if(this.ProgressBar00.pos > 0)
		{
			this.ProgressBar00.set_pos(0);
		}
	}
}

this.fileList_onerror = function(obj:nexacro.VirtualFile, e:nexacro.VirtualFileErrorEventInfo)
{
	trace("errortype: "+e.errortype);
	trace("errormsg: "+e.errormsg);
	trace("statuscode: "+e.statuscode);
}

this.fileUpTrans_onerror = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferErrorEventInfo)
{
	trace(e.errormsg);
};

this.fileUpTrans_onprogress = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferProgressEventInfo)
{
	var rtnPercent = this.fnGetPercent(e.loaded,e.total);
	
	this.ProgressBar00.set_pos(rtnPercent);
};

this.fileUpTrans_onsuccess = function(obj:nexacro.FileUpTransfer,e:nexacro.FileUpTransferEventinfo)
{
	var objCallDs = e.datasets[0];
	var sFileid = "";
	for(var i=0; i<objCallDs.getRowCount(); i++)
	{
		sFileid = this.dsUpload.getColumn(i,"FILE_ID");
		this.fileUpTrans.removeFile(sFileid);			//filelist remove
		
		this.dsUpload.setColumn(i,"FILE_URL",objCallDs.getColumn(i,"savePath"));
		this.dsUpload.setColumn(i,"FILE_ID", "");
	}
	
	alert("전송완료");	
};

this.fileDownTrans_onerror = function(obj:nexacro.FileDownTransfer,e:nexacro.FileDownTransferErrorEventInfo)
{
	trace("error : " + e.errormsg);
};

this.fileDownTrans_onsuccess = function(obj:nexacro.FileDownTransfer,e:nexacro.FileDownTransferEventInfo)
{
	trace(e.targetfullpath);
};

// https://developer.mozilla.org/en-US/docs/Web/API/File/Using_files_from_web_applications#Example_Showing_file(s)_size
this.cutFileSize = function(filesize)
{
	var sOutput = filesize + " bytes";
	for (var aMultiples = ["KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"], nMultiple = 0, nApprox = filesize / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) 
	{
		sOutput = nApprox.toFixed(3) + " " + aMultiples[nMultiple];
	}
	return sOutput;
};

this.addFileList = function(filelists)
{
	//array type virtualfile List
	var vFile;
	var len = filelists.length;
	for (var i = 0; i < len; i++)
	{	
		vFile = filelists[i];
		this.fileUpTrans.addFile(vFile.name,vFile);
		
		vFile.addEventHandler("onsuccess", this.fileList_onsuccess, this);
		vFile.addEventHandler("onerror", this.fileList_onerror, this);
		
		vFile.open(null, VirtualFile.openRead);
		vFile.getFileSize();	//return file size
		vFile.close();
	}
}

this.uploadfile = function()
{
	//file upload
	this.fileUpTrans.upload(this.saveUrl +"fileUpload_postdatatest.jsp?filefolder="+this.folderName);
}

this.downloadfile = function(i)
{
	this.fileDownTrans.clearPostDataList();
	
	this.fileDownTrans.set_downloadfilename(this.dsDownload.getColumn(i, "FILE_NAME"));	//runtime 전용 프로퍼티
	
	this.fileDownTrans.setPostData(
		"filepath",
		this.dsDownload.getColumn(i, "FILE_URL")
	);
	this.fileDownTrans.setPostData(
		"filename",
		this.dsDownload.getColumn(i, "FILE_NAME")
	);
	this.fileDownTrans.setPostData(
		"filefolder",
		"fileSample"
	);
	
	this.fileDownTrans.download(this.saveUrl+"fileDownload_postdatatest.jsp");
}

this.downloadfileAll = function()
{
	this.fileDownTrans.clearPostDataList();
	
	var arrNameList = new Array();
	for(var i=0; i<this.dsDownload.getRowCount(); i++)
	{
		//fileDownload_postdatatestAll.jsp -> request.getParameter("filenamelist"); 
		arrNameList[i] = this.dsDownload.getColumn(i, "FILE_NAME");
	}
	
	this.fileDownTrans.set_downloadfilename("fileSample.zip");	//runtime 전용 프로퍼티
	
	this.fileDownTrans.setPostData(
		"filefolder",
		"fileSample"
	);
	this.fileDownTrans.setPostData(
		"filenamelist",
		arrNameList
	);
	
	this.fileDownTrans.download(this.saveUrl+"fileDownload_postdatatestAll.jsp");
}

this.fnGetPercent = function(nload,nTotal)
{
	//일부값 ÷ 전체값 X 100
	var nCurPercent = (nload / nTotal) * 100;
	return nCurPercent;
};

/**************************************************************************
*  공통 함수 처리 영역
   해당 함수의 경우 프로젝트 사용 시 프로젝트 공통함수로 전환을 권장 드립니다.
**************************************************************************/
/**
* @description 파리미터 값이 Null 인지 체크하는 함수
* @param {All} val – 체크할 문자열
* @return {boolean} Val이 undefined, null, NaN, "", Array.length=0 인 경우 = true 
															  이 외의 경우 = false
*/
this.gfnIsNull = function (Val)
{
	if (new String(Val).valueOf() == "undefined") return true;
	if (Val == null) return true;
	if (("x" + Val == "xNaN") && (new String(Val.length).valueOf() == "undefined")) return true;
	if (Val.length == 0) return true;

	return false;
}
]]></Script>
  </Form>
</FDL>
